Notes:
	Finish implementing the changing of instruments by making a function that calls to alpaca rest api and grabs last 1000 candlesticks of specified granularity and parses it into a the data state variable.
		This function should be called on startup with the default instrument.
	
	Implement a parsing function for the streaming websocket pricing data that is coming from polygon.io's websocket, which updates the state data's current candlestick data. Then call this function (every second?) or (every time new price comes in? <- might be too much).
	
	Implement a feature to go back to a given time. (maybe for backtesting, every time you click a button, the next candlestick appears through api call?)
	
	Add more instruments (find way to get a list and search of all instruments from some data source)
	
	Make it look nice